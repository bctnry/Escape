<h3>Escape Installation</h3><hr />
<?php

if(isset($_REQUEST["step"])){
  switch($_REQUEST["step"]){
      case 1:{
          echo '
          <p>
          This is the first step of the installation.<br />
          Please, provide the information of your database so that this script will do the necessary setup for you.<br />
          </p>
          ';
          echo '
          <p>NOTE:
          <ul>
          <li>You need to specify an existing database.</li>
          <li>If you don\'t know which port is your database server using, write 6379.</li>
          </ul>
          </p>
          ';
          echo '
          <form action="./index.php" method="POST">
          <input type="hidden" name="step" value="2" />
          Database server address:<input type="text" name="database_server" /><br />
          Database server port:<input type="text" name="database_port" /><br />
          Database name:<input type="text" name="database_name" /><br />
          Database username:<input type="text" name="database_username" /><br />
          Database password:<input type="password" name="database_password" /><br />
          Blog name:<input type="text" name="blog_name" /><br />
          Blog admin username:<input type="text" name="admin_name" /><br />
          Blog admin password:<input type="password" name="admin_password" /><br />
          <input type="submit" value="Install" />
          </form>
          ';
          break;
      }
      case 2:{
          echo '
          Writing config.php...
          ';
          $config_file = fopen("../config.php",'w');
          fputs($config_file,'
          <?php
          # Escape
          # database configuration

          # This file is generated by the installation script.
          
          # KEEP IT SAFE
          
          $database_server = "' . $_REQUEST["database_server"] . '";
          $database_port   = "' . $_REQUEST["database_port"] . '";
          $database_username = "' . $_REQUEST["database_username"] . '";
          $database_password = "' . $_REQUEST["database_password"] . '";
          $database_name = "' . $_REQUEST["database_name"] . '";
          ?>
          ');
          fclose($config_file);
          echo '
          done.<br />
          ';
          echo '
          Setting up database...
          ';
          $conn = new mysqli(
              $_REQUEST["database_server"],
              $_REQUEST["database_username"],
              $_REQUEST["database_password"],
              $_REQUEST["database_name"],
              intval($_REQUEST["database_port"])
          );
          if($conn->connect_errno){
              die("failed to connect to database server.");
          }
          $conn->query(
              "CREATE TABLE Users(
                  ID INT AUTO_INCREMENT NOT NULL,
                  Name VARCHAR(64) UNIQUE,
                  Password VARCHAR(60),
                  PRIMARY KEY (ID)
                );");
          $conn->query(
              "CREATE TABLE Blogposts(
                ID INT AUTO_INCREMENT NOT NULL,
                Date DATETIME,
                UserID INT,
                Title VARCHAR(128),
                Body TEXT,
                PRIMARY KEY (ID),
                FOREIGN KEY (UserID) REFERENCES Users(ID)
                );"
          );
          $conn->query(
              "CREATE TABLE Comments (
                ID INT AUTO_INCREMENT NOT NULL,
                PostID INT,
                Date DATETIME,
                Name VARCHAR(128),
                Body TEXT,
                PRIMARY KEY (ID),
                FOREIGN KEY (PostID) REFERENCES Blogposts(ID)
            );"
          );
          $conn->query(
              "CREATE TABLE SessionControl (
                UserID INT,
                Hashval VARCHAR(60),
                FOREIGN KEY (UserID) REFERENCES Users(ID)
            );"
          );
          $conn->query(
              "CREATE TABLE Configurations (
                Blogname VARCHAR(128),
                CurrentTemplate VARCHAR(64)
            );"
          );
          $conn->query("CREATE PROCEDURE RETRIEVE_BLOGPOSTS() READS SQL DATA SELECT * FROM Blogposts ORDER BY Date DESC;");
          $conn->query("CREATE PROCEDURE RETRIEVE_BLOGPOSTS_RAW() DETERMINISTIC READS SQL DATA SELECT * FROM Blogposts;");
          $conn->query("CREATE PROCEDURE RETRIEVE_BLOGPOST_BY_ID(IN id INT) READS SQL DATA
          SELECT * FROM Blogposts WHERE Blogposts.ID = id;");
          $conn->query("CREATE PROCEDURE RETRIEVE_COMMENTS_AT(IN id INT) NOT DETERMINISTIC READS SQL DATA
          SELECT * FROM Comments WHERE Comments.PostID = id;");
          $conn->query("CREATE PROCEDURE RETRIEVE_COMMENT_BY_ID(IN cid INT) NOT DETERMINISTIC READS SQL DATA SELECT * FROM Comments WHERE Comments.ID = cid;");
          $conn->query("CREATE PROCEDURE INSERT_COMMENT_FOR(
              IN id INT, IN date DATETIME, IN name VARCHAR(128), IN body TEXT
              ) NOT DETERMINISTIC MODIFIES SQL DATA
              INSERT INTO Comments VALUES (NULL, id, date, name, body);");
          $conn->query("CREATE PROCEDURE INSERT_POST(
              IN date DATETIME, IN userid INT, IN title VARCHAR(128), IN body TEXT
              ) MODIFIES SQL DATA
              INSERT INTO Blogposts VALUES (NULL, date, userid, title, body);
              ");
          $conn->query("CREATE PROCEDURE RETRIEVE_BLOGPOST_TITLE(IN id INT) NOT DETERMINISTIC READS SQL DATA
                SELECT Blogposts.Title FROM Blogposts WHERE Blogposts.ID = id;");
          $conn->query("CREATE PROCEDURE RETRIEVE_BLOGPOST_ID_WITH_COMMENT_ID(IN cid INT) NOT DETERMINISTIC READS SQL DATA
                    SELECT Comments.PostID FROM Comments WHERE Comments.ID = cid;");
          $conn->query("
      CREATE PROCEDURE MODIFY_BLOGPOST(
          IN id INT, IN title VARCHAR(128), IN body TEXT
      ) NOT DETERMINISTIC MODIFIES SQL DATA
          UPDATE Blogposts SET Blogposts.Title = title, Blogposts.Body = body
          WHERE Blogposts.ID = id;");
          $conn->query("
      CREATE PROCEDURE MODIFY_COMMENT(
          IN id INT, IN name VARCHAR(128), IN body TEXT
      ) NOT DETERMINISTIC MODIFIES SQL DATA
          UPDATE Comments SET Comments.Name = name, Comments.Body = body
          WHERE Comments.ID = id;
          ");
          $conn->query("
      CREATE PROCEDURE MODIFY_COMMENT_WITH_DATE_UPDATE(
          IN cid INT, IN date DATETIME, IN name VARCHAR(128), IN body TEXT
      ) MODIFIES SQL DATA
          UPDATE Comments SET Comments.Name = name, Comments.Body = body, Comments.Date = date
          WHERE Comments.ID = cid;
          ");
          $conn->query("
      CREATE PROCEDURE DELETE_BLOGPOST(IN id INT) MODIFIES SQL DATA
          DELETE FROM Blogposts WHERE Blogposts.ID = id;
          ");
          $conn->query("
      CREATE PROCEDURE DELETE_COMMENT(IN cid INT) MODIFIES SQL DATA
          DELETE FROM Comments WHERE Comments.ID = cid;
      ");
      $conn->query("
      CREATE PROCEDURE IF_COMMENT_EXISTS_UNDER(IN id INT) READS SQL DATA
          SELECT EXISTS (SELECT * FROM Comments WHERE Comments.PostID = id);
      ");
      $conn->query("
      CREATE PROCEDURE CHECK_HASHVAL(IN userid INT, IN hashval VARCHAR(60)) READS SQL DATA
          SELECT EXISTS (SELECT * FROM SessionControl WHERE SessionControl.Hashval = hashval AND SessionControl.UserID = userid);
          ");
          $conn->query("
      CREATE PROCEDURE CREATE_USER(IN name VARCHAR(64), IN password VARCHAR(60))
          INSERT INTO Users VALUES (NULL, name, password);
          ");
          $conn->query("
      CREATE PROCEDURE DELETE_USER(IN userid INT)
          DELETE FROM Users WHERE Users.ID = userid;
          ");
          $conn->query("
      CREATE PROCEDURE RETRIEVE_USER_PASSWORD(IN userid INT)
          SELECT Users.Password FROM Users WHERE Users.ID = userid;
      ");
      $conn->query("
      CREATE PROCEDURE CLEAR_USER_SESSION(IN userid INT)
          DELETE FROM SessionControl WHERE SessionControl.UserID = userid;
          ");
          $conn->query("
      CREATE PROCEDURE INSERT_LOGIN_HASH(IN userid INT, IN hashval VARCHAR(60))
          INSERT INTO SessionControl VALUES (userid, hashval);
      ");
      $conn->query("
      CREATE PROCEDURE RETRIEVE_USER_PASSWORD_BY_NAME(IN username VARCHAR(64))
          SELECT Users.Password FROM Users WHERE Users.Name = username;
          ");
          $conn->query("
      CREATE PROCEDURE INSERT_USER(IN username VARCHAR(64), IN password VARCHAR(60))
          INSERT INTO Users VALUES (NULL, username, password);
      ");
      $conn->query("
      CREATE PROCEDURE RETRIEVE_USER_ID_BY_NAME(IN username VARCHAR(64))
          SELECT Users.ID FROM Users WHERE Users.Name = username;
          ");
          $conn->query("
      CREATE PROCEDURE RETRIEVE_USERNAME(IN userid INT)
          SELECT Users.Name FROM Users WHERE Users.ID = userid;
      ");
      $conn->query("
      CREATE PROCEDURE RETRIEVE_USERS()
          SELECT * FROM Users;
      ");
      $conn->query("
      CREATE PROCEDURE MODIFY_USER_BY_ID(IN userid INT, IN username VARCHAR(64), IN hashval VARCHAR(60))
          UPDATE Users SET Users.Name = username, Users.Password = hashval
          WHERE Users.ID = userid;
      ");
      $conn->query("
      CREATE PROCEDURE RETRIEVE_CURRENT_TEMPLATE()
          SELECT CurrentTemplate FROM Configurations;
          ");
          $conn->query("
      CREATE PROCEDURE RETRIEVE_CURRENT_BLOGNAME()
          SELECT Blogname FROM Configurations;
      ");
      echo 'done.<br />';
      echo '
      Creating the admin account...
      ';
      $conn->query('
      CALL INSERT_USER(\'' . $_REQUEST["admin_name"] . '\',\''
      . password_hash($_REQUEST["admin_password"],PASSWORD_BCRYPT) . '\');;
      ');
      echo '
      done.<br />
      ';
      echo '
      Setting up the blog...
      ';
      $conn->query('
      INSERT INTO Configurations VALUE (\'' . $_REQUEST["blog_name"] . '\',\'default\');;
      ');
      echo '
      done.<br />
      ';
      echo '
      Now it should be all set. Click <a href="../index.php">here</a> to visit your new blog.<br />
      Don\'t forget to delete this script from your server!
      ';
          break;
      }
  }
} else {
    if(file_exists("../config.php")){
        echo '
        Seems that you\'ve already installed Escape.
        Click <a href="../index.php">here</a> to go back.
        ';
    } else {
        echo '
        Seems that you haven\'t installed Escape yet.<br />
        Click <a href="./index.php?step=1">here</a> to start the installation.
        ';
    }
}

?>